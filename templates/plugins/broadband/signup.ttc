#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.20
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1298463122',
        'name' => 'plugins/broadband/signup',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    #line 39 "templates/plugins/broadband/signup"
    if ($stash->get(['result', 0, 'services', 0, 'size', 0]) > 0) {
    $output .=  "\n<h2>Sign up for broadband</h2>\n\n<p>Our checks indicate that your line should be able to sustain an ADSL broadband connection with speeds of up to ";
    #line 4 "templates/plugins/broadband/signup"
    $output .=  $stash->get(['result', 0, 'qualification', 0, 'top', 0]);
    $output .=  " kb/s. Please note that this is an estimated maximum speed and actual speeds may vary depending upon the length and quality of your line and the equipment you use.</p>\n\n";
    #line 8 "templates/plugins/broadband/signup"
    if ($stash->get(['result', 0, 'qualification', 0, 'fttc', 0, 'down', 0])) {
    $output .=  "\n<p>The checks also indicate that your line should be able to sustain a FTTC broadband connection with download speeds of up to ";
    #line 7 "templates/plugins/broadband/signup"
    $output .=  $stash->get(['result', 0, 'qualification', 0, 'fttc', 0, 'down', 0]);
    $output .=  " kb/s.</p>\n";
    }
    
    $output .=  "\n\n<p>To place an order for service please select the service and any options you require from the list below.</p>\n\n<p>Select the service you require: \n\n<select name=\"service\">\n";
    #line 24 "templates/plugins/broadband/signup"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['result', 0, 'services', 0, 'keys', 0, 'nsort', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'s'} = $_tt_value;
    $output .=  "\n    <option value=\"";
    #line 16 "templates/plugins/broadband/signup"
    $output .=  $stash->get(['result', 0, 'services', 0, $stash->get('s'), 0, 'id', 0]);
    $output .=  "\">";
    #line 16 "templates/plugins/broadband/signup"
    $output .=  $stash->get(['result', 0, 'services', 0, $stash->get('s'), 0, 'name', 0]);
    $output .=  " - &pound;\n    ";
    #line 22 "templates/plugins/broadband/signup"
    if ($stash->get(['result', 0, 'services', 0, $stash->get('s'), 0, 'name', 0, 'match', [ 'Business' ]])) {
    $output .=  "\n        ";
    #line 18 "templates/plugins/broadband/signup"
    $output .=  $stash->get(['result', 0, 'services', 0, $stash->get('s'), 0, 'price', 0]);
    $output .=  " + VAT\n    ";
    }
    else {
    $output .=  "\n        ";
    #line 20 "templates/plugins/broadband/signup"
    # USE
    $stash->set('format',
                $context->plugin('format'));
    $output .=  "\n        ";
    #line 21 "templates/plugins/broadband/signup"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('format', [ '%01.2f' ])
                  || $context->throw($context->error);
    
    #line 21 "templates/plugins/broadband/signup"
    $output .=  $stash->get(['result', 0, 'services', 0, $stash->get('s'), 0, 'price', 0]) * 1.2;
        
        &$_tt_filter($output);
    };
    
    $output .=  " inc. VAT\n    ";
    }
    
    $output .=  "\n    </option>\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</select><br />\n\nRequested install date: <select name=\"crd\">\n    ";
    #line 28 "templates/plugins/broadband/signup"
    # USE
    $stash->set('date',
                $context->plugin('date'));
    $output .=  "\n    ";
    #line 31 "templates/plugins/broadband/signup"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['result', 0, 'services', 0, $stash->get('s'), 0, 'crd', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'t'} = $_tt_value;
    $output .=  "\n        <option value=\"";
    #line 30 "templates/plugins/broadband/signup"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['date', 0, 'format', [ $stash->get('t'), '%Y-%m-%d' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
    #line 30 "templates/plugins/broadband/signup"
    $output .=  $stash->get(['date', 0, 'format', [ $stash->get('t'), '%e %B %Y' ]]);
    $output .=  "</option>\n    ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</select><br />\n</p>\n\n";
    }
    else {
    $output .=  "\n<h2> Sorry </h2>\n\n<p>It seems we cannot provide any services in your area.</p>\n";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
